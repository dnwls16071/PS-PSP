# 당신은 폰켓몬을 잡기 위한 오랜 여행 끝에, 홍 박사님의 연구실에 도착했습니다. 홍 박사님은 당신에게 자신의 연구실에 있는 총 N 마리의 폰켓몬 중에서 N/2마리를 가져가도 좋다고 했습니다.
# 홍 박사님 연구실의 폰켓몬은 종류에 따라 번호를 붙여 구분합니다. 따라서 같은 종류의 폰켓몬은 같은 번호를 가지고 있습니다. 예를 들어 연구실에 총 4마리의 폰켓몬이 있고, 각 폰켓몬의 종류 번호가 [3번, 1번, 2번, 3번]이라면 이는 3번 폰켓몬 두 마리, 1번 폰켓몬 한 마리, 2번 폰켓몬 한 마리가 있음을 나타냅니다. 이때, 4마리의 폰켓몬 중 2마리를 고르는 방법은 다음과 같이 6가지가 있습니다.
#
# 첫 번째(3번), 두 번째(1번) 폰켓몬을 선택
# 첫 번째(3번), 세 번째(2번) 폰켓몬을 선택
# 첫 번째(3번), 네 번째(3번) 폰켓몬을 선택
# 두 번째(1번), 세 번째(2번) 폰켓몬을 선택
# 두 번째(1번), 네 번째(3번) 폰켓몬을 선택
# 세 번째(2번), 네 번째(3번) 폰켓몬을 선택
# 이때, 첫 번째(3번) 폰켓몬과 네 번째(3번) 폰켓몬을 선택하는 방법은 한 종류(3번 폰켓몬 두 마리)의 폰켓몬만 가질 수 있지만, 다른 방법들은 모두 두 종류의 폰켓몬을 가질 수 있습니다. 따라서 위 예시에서 가질 수 있는 폰켓몬 종류 수의 최댓값은 2가 됩니다.
# 당신은 최대한 다양한 종류의 폰켓몬을 가지길 원하기 때문에, 최대한 많은 종류의 폰켓몬을 포함해서 N/2마리를 선택하려 합니다. N마리 폰켓몬의 종류 번호가 담긴 배열 nums가 매개변수로 주어질 때, N/2마리의 폰켓몬을 선택하는 방법 중, 가장 많은 종류의 폰켓몬을 선택하는 방법을 찾아, 그때의 폰켓몬 종류 번호의 개수를 return 하도록 solution 함수를 완성해주세요.
#
# nums는 폰켓몬의 종류 번호가 담긴 1차원 배열입니다.
# nums의 길이(N)는 1 이상 10,000 이하의 자연수이며, 항상 짝수로 주어집니다.
# 폰켓몬의 종류 번호는 1 이상 200,000 이하의 자연수로 나타냅니다.
# 가장 많은 종류의 폰켓몬을 선택하는 방법이 여러 가지인 경우에도, 선택할 수 있는 폰켓몬 종류 개수의 최댓값 하나만 return 하면 됩니다.

# Code1 => 시간초과가 발생한 코드
import sys
input = sys.stdin.readline
from itertools import combinations

def solution(nums):
    answer = 0
    tmp = len(nums)
    lst = list(combinations(nums, tmp//2))
    for i in lst:
        i = list(set(i))
        if len(i) > answer:
            answer = len(i)
    return answer

# 위의 코드처럼 조합을 구해서 풀이하는 경우 시간초과가 발생한다.
# 모든 조합 경우의 수를 구하는 것은 굉장히 많은 시간이 걸리기 때문이다.

# Code2
def solution(nums):
    N = len(nums)
    nums = set(nums)
    if len(nums) > N//2:
        answer = N//2
    else:
        answer = len(nums)
    return answer

# 간단히 구현한 위의 코드를 설명하면 다음과 같다.
# 중복되는 요소를 최대한 제거하기 위해서 set()을 사용한다.

# 만약 [3, 1, 2, 3]이라면 set()을 통해서 {1, 2, 3}으로 바꿀 수 있다.
# {1, 2, 3} 중에서 2개를 택하는 것이므로 해당하는 경우의 수는 (1, 2), (1, 3), (2, 3)이고 최대한 잡을 수 있는 폰켓몬은 2개이다.
# 만약 set()을 적용시킨 집합의 길이가 N//2보다 크다면 N//2가 된다.

# 만약 [3,3,3,2,2,2]이라면 set()을 통해서 {2, 3}으로 바꿀 수 있다.
# {2, 3} 중에서 3개를 택하는 것인데 이 때 set()을 적용시킨 집합의 길이가 3보다 작은 2이므로 최대한 잡을 수 있는 폰켓몬은 집합의 길이인 3이 된다.